@page "/Tickets"

<div class="ticket-card card mb-3 w-100">
    <div class="card-header d-flex justify-content-between align-items-center p-3">
        <div class="d-flex align-items-center gap-3">
            <span class="badge @GetStatusClass()">@Status</span>
            <div>
                <h6 class="mb-0">Ticket #@TicketId</h6>
                <small class="text-muted">@Category • @CreatedDate</small>
            </div>
        </div>
        <div class="d-flex gap-2">
            <button class="btn btn-sm btn-action-inactive"
                    onclick="toggleActive(this)">
                Activate
            </button>
            <button class="btn btn-sm btn-outline-secondary"
                    onclick="toggleCollapse(this)">
                ▼ Details
            </button>
        </div>
    </div>

    <div class="card-body p-3 collapse-body" style="display: none;">
        <div class="row">
            <div class="col-md-6">
                <div class="mb-2">
                    <span class="text-muted">Priority:</span>
                    <span class="badge @GetPriorityClass() ms-2">@Priority</span>
                </div>
                <div class="mb-2">
                    <span class="text-muted">Assigned To:</span>
                    <span>@AssignedTo</span>
                </div>
            </div>
            <div class="col-md-6">
                <div class="mb-2">
                    <span class="text-muted">Created By:</span>
                    <span>@CreatedBy</span>
                </div>
                <div class="mb-2">
                    <span class="text-muted">Last Updated:</span>
                    <span>@LastUpdated</span>
                </div>
            </div>
        </div>

        <div class="mt-3 p-2 bg-light rounded">
            <h6 class="text-muted">Description:</h6>
            <p class="mb-0">@Description</p>
        </div>

        <div class="card-footer p-3 d-flex justify-content-end gap-2">
            <button class="btn btn-sm btn-outline-primary">Edit</button>
            <button class="btn btn-sm btn-primary">Save</button>
        </div>
    </div>
</div>

<style>
    .ticket-card {
        border-left: 4px solid;
        border-left-color: @GetStatusBorderColor();
        transition: all 0.3s ease;
    }

        .ticket-card:hover {
            box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
        }

    .badge-status-open {
        background-color: #0d6efd;
    }

    .badge-status-pending {
        background-color: #fd7e14;
    }

    .badge-status-closed {
        background-color: #198754;
    }

    .badge-priority-high {
        background-color: #dc3545;
    }

    .badge-priority-medium {
        background-color: #ffc107;
        color: #000;
    }

    .badge-priority-low {
        background-color: #198754;
    }

    .btn-action-active {
        background-color: #198754;
        color: white;
    }

    .btn-action-inactive {
        background-color: #6c757d;
        color: white;
    }

    .collapse-body {
        transition: all 0.3s ease;
    }
</style>



@code {
    [Parameter] public int TicketId { get; set; }
    [Parameter] public string Status { get; set; } = "Open";
    [Parameter] public string CreatedDate { get; set; } = DateTime.Now.ToString("g");
    [Parameter] public string Priority { get; set; } = "Medium";
    [Parameter] public string Category { get; set; } = "Technical";
    [Parameter] public string AssignedTo { get; set; } = "Unassigned";
    [Parameter] public string Description { get; set; } = "No description provided";
    [Parameter] public string CreatedBy { get; set; } = "System";
    [Parameter] public string LastUpdated { get; set; } = DateTime.Now.ToString("g");

    private string GetStatusClass() => Status switch
    {
        "Open" => "badge-status-open",
        "Pending" => "badge-status-pending",
        "Closed" => "badge-status-closed",
        _ => "bg-secondary"
    };

    private string GetPriorityClass() => Priority switch
    {
        "High" => "badge-priority-high",
        "Medium" => "badge-priority-medium",
        "Low" => "badge-priority-low",
        _ => "bg-secondary"
    };

    private string GetStatusBorderColor() => Status switch
    {
        "Open" => "#0d6efd",
        "Pending" => "#fd7e14",
        "Closed" => "#198754",
        _ => "#6c757d"
    };
}
